apply plugin: 'com.android.application'

project.archivesBaseName = "pathos"

def versionMajor = 1
def versionMinor = 5
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

def gitSha() {
    def res = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

    def diff = 'git diff'.execute([], project.rootDir).text.trim()
    if (diff != null && diff.length() > 0) {
        res += "-dirty"
    }

    return res
}

def buildTime() {
    return new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 'Google Inc.:Google APIs:18'
    buildToolsVersion "21.1.2"

    compileOptions.encoding = 'windows-1251' // write your encoding here

    defaultConfig {
        applicationId "com.alvarosantisteban.pathos"
        minSdkVersion 10
        targetSdkVersion 21

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        buildConfigField "String", "BUILD_DATETIME", "\"${buildTime()}\""
        buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
            def outputFile = output.outputFile
            output.outputFile = new File(outputFile.parent, outputFile.name.replace(".apk", "-" + versionName + ".apk"))
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.google.android.gms:play-services:6.5.87'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.j256.ormlite:ormlite-core:4.48'
}
}
